function [dtheta_pr,dw1,dw2] = inertial_vel_control_2_dw1_dw2_dtheta_pr_fun(in1,in2,Kvx,Kvy,Kdphi,Kr,Kw1,Kw2,theta_p_max,w1_max,w2_max,theta_pr,dxr,dyr,dphir,fss_minus1_dvy_f_dvyp,K_slow_dtheta_p,K_slow_theta_p)
%INERTIAL_VEL_CONTROL_2_DW1_DW2_DTHETA_PR_FUN
%    [DTHETA_PR,DW1,DW2] = INERTIAL_VEL_CONTROL_2_DW1_DW2_DTHETA_PR_FUN(IN1,IN2,KVX,KVY,KDPHI,KR,KW1,KW2,THETA_P_MAX,W1_MAX,W2_MAX,THETA_PR,DXR,DYR,DPHIR,FSS_MINUS1_DVY_F_DVYP,K_SLOW_DTHETA_P,K_SLOW_THETA_P)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    07-Jun-2020 11:41:41

state3 = in1(3,:);
state4 = in1(4,:);
state5 = in1(5,:);
state6 = in1(6,:);
state7 = in1(7,:);
state8 = in1(8,:);
w1 = in2(1,:);
w2 = in2(2,:);
t2 = cos(fss_minus1_dvy_f_dvyp);
t3 = cos(state3);
t4 = cos(theta_pr);
t5 = sin(fss_minus1_dvy_f_dvyp);
t6 = sin(state3);
t7 = sin(theta_pr);
t8 = fss_minus1_dvy_f_dvyp.*theta_pr;
t9 = dphir.^2;
t10 = dphir.^3;
t12 = fss_minus1_dvy_f_dvyp.*2.0;
t13 = state7.^2;
t14 = theta_pr.*2.0;
t15 = theta_pr.^2;
t16 = theta_p_max.^2;
t19 = -theta_pr;
t29 = w1.*2.84880220876251e+14;
t30 = w1_max.*2.84880220876251e+14;
t11 = t9.^2;
t17 = sin(t12);
t18 = sin(t14);
t20 = -t16;
t21 = fss_minus1_dvy_f_dvyp+t19;
t25 = t9.*5.14642399976e+11;
t26 = t9.*8.234278399616e+12;
t31 = t9.*w1.*-5.14642399976e+11;
t32 = dyr.*t3.*t10.*6.699505098e+11;
t33 = dxr.*t6.*t10.*6.699505098e+11;
t34 = dxr.*t3.*t9.*5.9757221944e+11;
t35 = dyr.*t6.*t9.*5.9757221944e+11;
t36 = dphir.*dyr.*t3.*2.84880220876251e+14;
t37 = dphir.*dxr.*t6.*2.84880220876251e+14;
t22 = t15+t20;
t23 = t8+t20;
t27 = t25.*w1;
t28 = t25.*w1_max;
t38 = -t33;
t39 = -t36;
t40 = t25-2.84880220876251e+14;
t41 = t26-4.558083534020016e+15;
t24 = 1.0./t23;
t42 = 1.0./t40;
t43 = 1.0./t41;
dtheta_pr = exp(-K_slow_theta_p.*abs(state4+t19)-K_slow_dtheta_p.*abs(state8)).*(Kr.*t21.*t23-(Kvy.*t22.^2.*t24.*t42.*(state6+dxr.*t6.*1.698221308949199-dyr.*t3.*1.698221308949199+t43.*(dxr.*t6.*-1.375532482596769e+15+dyr.*t3.*1.375532482596769e+15+dphir.*dxr.*t3.*9.56115551104e+12+dphir.*dyr.*t6.*9.56115551104e+12)).*(state6.*6.672555963399511e+38+t7.*5.570265510526206e+40+state5.*state7.*2.413213906191272e+39-state6.*t9.*1.205411946261366e+36-t7.*t9.*1.006280745649242e+38+t7.*t13.*1.68924973433389e+38+t13.*t18.*5.736642217221769e+38-dphir.*dxr.*t3.*2.586632619554752e+39-dphir.*dyr.*t6.*2.586632619554752e+39+dxr.*t3.*t10.*3.262654716332396e+36-dxr.*t6.*t9.*5.425788391306639e+36+dyr.*t3.*t9.*5.425788391306639e+36+dyr.*t6.*t10.*3.262654716332396e+36+state5.*state7.*t4.*5.678150367508875e+39-state5.*state7.*t9.*4.359524127430457e+36-t7.*t9.*t13.*3.05166688920132e+35-t9.*t13.*t18.*1.036337064536716e+36-dphir.*dxr.*t3.*t4.*5.678150367508875e+39-dphir.*dyr.*t4.*t6.*5.678150367508875e+39+dxr.*t3.*t4.*t10.*7.162147394470844e+36-dxr.*t4.*t6.*t9.*1.191063706349856e+37+dyr.*t3.*t4.*t9.*1.191063706349856e+37+dyr.*t4.*t6.*t10.*7.162147394470844e+36-state5.*state7.*t4.*t9.*1.025770382924813e+37))./(t21.*(t4.*5.36452e+6+2.443761e+6).*3.715469692580659e+18))-(t22.*t24.*t42.*(t2.*5.36452e+6+2.443761e+6).*(state5.*w2.*-1.071682256799665e+24-state7.*w1.*1.071682256799665e+24+dxr.*t3.*t10.*2.409534079509008e+21-dxr.*t6.*t9.*1.148695636190467e+24+dxr.*t6.*t11.*1.448909754989634e+21+dyr.*t3.*t9.*1.148695636190467e+24-dyr.*t3.*t11.*1.448909754989634e+21+dyr.*t6.*t10.*2.409534079509008e+21-state5.*t2.*w2.*2.521605310116859e+24-state7.*t2.*w1.*2.521605310116859e+24-state7.*t5.*w2.*1.500355159519531e+23+state5.*t9.*w2.*1.936017625072875e+21+state7.*t9.*w1.*1.936017625072875e+21-state7.*t17.*w2.*5.095161818877053e+23+dxr.*t2.*t3.*t10.*5.289385402339944e+21-dxr.*t2.*t6.*t9.*2.521605310116859e+24+dxr.*t2.*t6.*t11.*3.180632377240242e+21+dyr.*t2.*t3.*t9.*2.521605310116859e+24-dyr.*t2.*t3.*t11.*3.180632377240242e+21+dyr.*t2.*t6.*t10.*5.289385402339944e+21+state5.*t2.*t9.*w2.*4.555335588406765e+21+state7.*t2.*t9.*w1.*4.555335588406765e+21+state7.*t5.*t9.*w2.*2.710424675102025e+20+state7.*t9.*t17.*w2.*9.204522162568873e+20).*2.365335938745008e+12)./(t2.*5.019210159904228e+29-t13.*6.996878069751388e+27+state6.*t5.*1.319847785083305e+28+t2.*t13.*1.522135598951588e+27+t2.^2.*t13.*2.067651019220087e+28+t2.^3.*t13.*2.269443543297921e+28-state5.*state7.*t5.*3.43026429422666e+27+1.101812054738963e+30);
if nargout > 1
    dw1 = Kw1.*t42.*(t29+t31+t32+t34+t35+t37+t38+t39)+t9.*t42.*(dxr.*t3.*2.84880220876251e+14+dyr.*t6.*2.84880220876251e+14-dphir.*dxr.*t6.*5.9757221944e+11+dphir.*dyr.*t3.*5.9757221944e+11-dxr.*t3.*t9.*6.699505098e+11-dyr.*t6.*t9.*6.699505098e+11)+Kvx.*t42.^4.*1.0./w1_max.^2.*(-state5+dxr.*t3.*2.301778691050801+dyr.*t6.*2.301778691050801+t43.*(dxr.*t3.*1.375532482596769e+15+dyr.*t6.*1.375532482596769e+15+dphir.*dxr.*t6.*9.56115551104e+12-dphir.*dyr.*t3.*9.56115551104e+12)).*(t28+t29-t30+t31+t32+t34+t35+t37+t38+t39).^2.*(t29+t30+t31+t32+t34+t35+t37+t38+t39-t9.*w1_max.*5.14642399976e+11).^2;
end
if nargout > 2
    dw2 = -Kw2.*w2+Kdphi.*(w2.^2-w2_max.^2).^2.*(dphir-state7);
end
