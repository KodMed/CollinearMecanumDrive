function [dtheta_pr,dw1,dw2] = body_vel_control_dw1_dw2_dtheta_pr_fun(in1,in2,Kv,Kdphi,Kr,Kw1,Kw2,theta_p_max,w1_max,w2_max,theta_pr,fss_minus1_dvy0,vxr,vyr,dphir,K_slow_dtheta_p,K_slow_theta_p)
%BODY_VEL_CONTROL_DW1_DW2_DTHETA_PR_FUN
%    [DTHETA_PR,DW1,DW2] = BODY_VEL_CONTROL_DW1_DW2_DTHETA_PR_FUN(IN1,IN2,KV,KDPHI,KR,KW1,KW2,THETA_P_MAX,W1_MAX,W2_MAX,THETA_PR,FSS_MINUS1_DVY0,VXR,VYR,DPHIR,K_SLOW_DTHETA_P,K_SLOW_THETA_P)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    17-Oct-2022 15:26:40

state4 = in1(4,:);
state5 = in1(5,:);
state6 = in1(6,:);
state7 = in1(7,:);
state8 = in1(8,:);
w1 = in2(1,:);
w2 = in2(2,:);
dtheta_pr = exp(-K_slow_dtheta_p.*abs(state8)-K_slow_theta_p.*abs(state4-theta_pr)).*(Kr.*(fss_minus1_dvy0-theta_pr).*(fss_minus1_dvy0.*theta_pr-theta_p_max.^2)-((theta_pr.^2-theta_p_max.^2).*(state5.*w2.*2.07010441457416e+31+state7.*w1.*2.07010441457416e+31+state5.*w2.*cos(theta_pr).*9.415106672479785e+31+state7.*w1.*cos(theta_pr).*9.415106672479785e+31+state7.*w2.*sin(theta_pr).*2.898146180403823e+30+state5.*w2.*cos(theta_pr).^2.*1.069240648431695e+32+state7.*w1.*cos(theta_pr).^2.*1.069240648431695e+32+state7.*w2.*sin(theta_pr.*2.0).*9.842018851487613e+30+state7.*w2.*cos(theta_pr).*sin(theta_pr).*6.361981858168585e+30+state7.*w2.*sin(theta_pr.*2.0).*cos(theta_pr).*2.160510253219621e+31))./((fss_minus1_dvy0.*theta_pr-theta_p_max.^2).*(cos(theta_pr).*4.778288072228825e+32+state7.^2.*cos(theta_pr).*1.449073090201912e+30+cos(theta_pr).^2.*1.048925076111493e+33+sin(theta_pr).^2.*1.048925076111493e+33+state7.^2.*cos(theta_pr.*2.0).*9.842018851487613e+30+state7.^2.*cos(theta_pr).^2.*3.180990929084292e+30+state7.^2.*sin(theta_pr).^2.*3.180990929084292e+30+state6.*sin(theta_pr).*1.256495091399306e+31-state5.*state7.*sin(theta_pr).*3.26561160810378e+30+state7.^2.*cos(theta_pr.*2.0).*cos(theta_pr).*2.160510253219621e+31+state7.^2.*sin(theta_pr.*2.0).*sin(theta_pr).*1.08025512660981e+31))+(Kv.*(theta_pr.^2-theta_p_max.^2).^2.*(state6-vyr).*(((sin(theta_pr).*1.0724748384e-10+sin(theta_pr).^2.*5.20852249933514e-9+5.680299737437486e-9).*(state6.*9.956359014193912e-1+state7.^2.*sin(theta_pr).*2.254e-1+state5.*state7.*(1.61e+2./5.0e+1)).*4.491194675094697e-5)./(sin(theta_pr).*1.662431635466839e-14-cos(theta_pr).^2.*2.554188920360585e-13+sin(theta_pr).^2.*8.073674334265432e-13-cos(theta_pr).^2.*sin(theta_pr).*4.822462680186929e-15-cos(theta_pr).^2.*sin(theta_pr).^2.*2.342050785026386e-13+8.804971123180858e-13)-((cos(theta_pr).*1.133180532546843e-12+cos(theta_pr).*sin(theta_pr).*2.139513167784796e-14+cos(theta_pr).*sin(theta_pr).^2.*1.039064234705584e-12).*(state6.*(-3.132773109243698e-3)+sin(theta_pr).*2.211174+state7.^2.*sin(theta_pr.*2.0).*2.277218939393939e-2+state5.*state7.*cos(theta_pr).*2.254e-1))./(sin(theta_pr).*1.662431635466839e-14-cos(theta_pr).^2.*2.554188920360585e-13+sin(theta_pr).^2.*8.073674334265432e-13-cos(theta_pr).^2.*sin(theta_pr).*4.822462680186929e-15-cos(theta_pr).^2.*sin(theta_pr).^2.*2.342050785026386e-13+8.804971123180858e-13)+((((cos(theta_pr).*1.280339560818409e-9+cos(theta_pr).*sin(theta_pr).*2.4173582857536e-11+cos(theta_pr).*sin(theta_pr).^2.*1.174000971350141e-9).*(state6.*9.956359014193912e-1+state7.^2.*sin(theta_pr).*2.254e-1+state5.*state7.*(1.61e+2./5.0e+1)).*8.850625e-4)./(sin(theta_pr).*1.662431635466839e-14-cos(theta_pr).^2.*2.554188920360585e-13+sin(theta_pr).^2.*8.073674334265432e-13-cos(theta_pr).^2.*sin(theta_pr).*4.822462680186929e-15-cos(theta_pr).^2.*sin(theta_pr).^2.*2.342050785026386e-13+8.804971123180858e-13)-((sin(theta_pr).*3.276090229454028e-13+sin(theta_pr).^2.*1.591048018937218e-11+1.735161870832496e-11).*(state6.*(-3.132773109243698e-3)+sin(theta_pr).*2.211174+state7.^2.*sin(theta_pr.*2.0).*2.277218939393939e-2+state5.*state7.*cos(theta_pr).*2.254e-1))./(sin(theta_pr).*1.662431635466839e-14-cos(theta_pr).^2.*2.554188920360585e-13+sin(theta_pr).^2.*8.073674334265432e-13-cos(theta_pr).^2.*sin(theta_pr).*4.822462680186929e-15-cos(theta_pr).^2.*sin(theta_pr).^2.*2.342050785026386e-13+8.804971123180858e-13)).*(((sin(theta_pr).*1.0724748384e-10+sin(theta_pr).^2.*5.20852249933514e-9+5.680299737437486e-9).*4.491194675094697e-5)./(sin(theta_pr).*1.662431635466839e-14-cos(theta_pr).^2.*2.554188920360585e-13+sin(theta_pr).^2.*8.073674334265432e-13-cos(theta_pr).^2.*sin(theta_pr).*4.822462680186929e-15-cos(theta_pr).^2.*sin(theta_pr).^2.*2.342050785026386e-13+8.804971123180858e-13)+((cos(theta_pr).*1.133180532546843e-12+cos(theta_pr).*sin(theta_pr).*2.139513167784796e-14+cos(theta_pr).*sin(theta_pr).^2.*1.039064234705584e-12).*2.975e-2)./(sin(theta_pr).*1.662431635466839e-14-cos(theta_pr).^2.*2.554188920360585e-13+sin(theta_pr).^2.*8.073674334265432e-13-cos(theta_pr).^2.*sin(theta_pr).*4.822462680186929e-15-cos(theta_pr).^2.*sin(theta_pr).^2.*2.342050785026386e-13+8.804971123180858e-13)).*(cos(theta_pr).^2.*4.49657419225e-5-1.550089173138068e-4))./(cos(theta_pr).*1.994930875e-4+9.08773621875e-5)))./((fss_minus1_dvy0-theta_pr).*(fss_minus1_dvy0.*theta_pr-theta_p_max.^2)));
if nargout > 1
    dw1 = -Kw1.*w1-Kv.*(w1.^2-w1_max.^2).^2.*(state5-vxr);
end
if nargout > 2
    dw2 = -Kw2.*w2+Kdphi.*(w2.^2-w2_max.^2).^2.*(dphir-state7);
end
