//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: calculate_u.cpp
//
// MATLAB Coder version            : 4.0
// C/C++ source code generated on  : 30-Jul-2019 16:20:27
//

// Include Files
#include "calculate_u.h"

// Function Definitions

//
// r = zeros(numel(r_reduced)*(8/3),1);
//  for i=1:numel(r_reduced/3)
//      r((i-1)*8+(1:3)) = r_reduced((i-1)*3+(1:3));
//  end
// Arguments    : const real_T x[8]
//                const real_T r[36]
//                const real_T c[48]
//                real_T u[4]
// Return Type  : void
//
void calculate_u(const real_T x[8], const real_T r[36], const real_T c[48],
                 real_T u[4])
{
  int32_T i0;
  real_T a[4];
  int32_T i1;
  real_T b_a[4];
  static const real_T c_a[32] = { 1.3422739431640913, -1.3422739431640867,
    -1.3422739431640878, 1.3422739431640902, -0.98016621514323732,
    -0.98016621514323232, -0.98016621514323121, -0.98016621514323488,
    -1.0871744928014131, -0.65230469568084748, 0.65230469568084781,
    1.0871744928014124, 0.96393422569757059, 0.9639342256975687,
    0.96393422569757026, 0.96393422569757226, 0.22142036227604864,
    -0.22142036227604797, -0.22142036227604805, 0.22142036227604842,
    -0.4788408504748492, -0.4788408504748482, -0.47884085047484887,
    -0.47884085047485042, -0.086634999898829543, -0.051980999939297723,
    0.051980999939297758, 0.086634999898829557, 0.14575555149248998,
    0.14575555149248973, 0.14575555149248989, 0.14575555149249028 };

  static const real_T d_a[144] = { -0.9673496301923441, 0.96734963019234255,
    0.96734963019234321, -0.96734963019234388, 0.3766683921200088,
    0.3766683921200048, 0.37666839212000491, 0.37666839212000758,
    0.34951568285680157, 0.20970940971408097, -0.20970940971408097,
    -0.34951568285680135, 0.27088650213434579, -0.2708865021343444,
    -0.27088650213434484, 0.27088650213434556, -0.39663280505335086,
    -0.39663280505335047, -0.39663280505335013, -0.39663280505334991,
    -0.16153792733780142, -0.096922756402681221, 0.096922756402679874,
    0.16153792733780051, 0.14274579512387778, -0.14274579512387733,
    -0.14274579512387725, 0.14274579512387775, -0.2637646554486559,
    -0.26376465544865579, -0.263764655448656, -0.26376465544865563,
    0.2890641031621079, 0.17343846189726439, -0.17343846189726553,
    -0.2890641031621089, 0.04743372837054944, -0.047433728370549849,
    -0.047433728370549683, 0.047433728370549509, -0.13659880607879191,
    -0.13659880607879216, -0.13659880607879277, -0.13659880607879191,
    0.3233160931038182, 0.19398965586229078, -0.19398965586229117,
    -0.32331609310381842, -0.019818631502931283, 0.019818631502930294,
    0.019818631502930419, -0.019818631502931183, -0.029409695517786265,
    -0.0294096955177866, -0.029409695517787278, -0.029409695517786397,
    0.21177786071296512, 0.12706671642777925, -0.12706671642777881,
    -0.21177786071296484, -0.06396859648311877, 0.063968596483117757,
    0.063968596483117882, -0.063968596483118756, 0.052283497304564226,
    0.052283497304563879, 0.052283497304563178, 0.052283497304564143,
    0.095980411959685721, 0.057588247175811756, -0.057588247175810806,
    -0.095980411959685139, -0.089793274327594069, 0.089793274327593181,
    0.0897932743275933, -0.089793274327594125, 0.10836571373434077,
    0.10836571373434063, 0.10836571373433992, 0.10836571373434083,
    0.0226856672330063, 0.013611400339804092, -0.013611400339803091,
    -0.022685667233005656, -0.1016520383282189, 0.10165203832821841,
    0.10165203832821852, -0.101652038328219, 0.14172923886760416,
    0.14172923886760408, 0.14172923886760358, 0.1417292388676043,
    -0.0092882860733847026, -0.0055729716440305532, 0.0055729716440314067,
    0.0092882860733852386, -0.10335214980286253, 0.10335214980286243,
    0.10335214980286245, -0.10335214980286259, 0.15663758483292783,
    0.15663758483292792, 0.15663758483292761, 0.156637584832928,
    -0.015969842228879105, -0.00958190533732726, 0.0095819053373278826,
    0.015969842228879469, -0.098092313239611442, 0.098092313239611692,
    0.09809231323961172, -0.098092313239611512, 0.15767205506543555,
    0.15767205506543588, 0.15767205506543555, 0.15767205506543583,
    -0.01205226213543812, -0.0072313572812627422, 0.0072313572812631169,
    0.012052262135438321, -0.08846231564996436, 0.0884623156499649,
    0.088462315649964887, -0.088462315649964415, 0.14910718644761378,
    0.1491071864476142, 0.14910718644761395, 0.14910718644761403,
    -0.0062374287860255, -0.003742457271615231, 0.0037424572716154066,
    0.00623742878602556, -0.27085101926621097, 0.27085101926621719,
    0.27085101926621719, -0.27085101926621125, 0.66410850886930439,
    0.66410850886930883, 0.6641085088693085, 0.6641085088693055,
    -7.9579665442619212E-5, -4.7747799265879489E-5, 4.7747799264420722E-5,
    7.95796654412144E-5 };

  for (i0 = 0; i0 < 4; i0++) {
    a[i0] = 0.0;
    for (i1 = 0; i1 < 8; i1++) {
      a[i0] += c_a[i0 + (i1 << 2)] * x[i1];
    }

    b_a[i0] = 0.0;
    for (i1 = 0; i1 < 36; i1++) {
      b_a[i0] += d_a[i0 + (i1 << 2)] * r[i1];
    }

    u[i0] = (a[i0] + b_a[i0]) + c[i0];
  }
}

//
// Arguments    : void
// Return Type  : void
//
void calculate_u_initialize()
{
}

//
// File trailer for calculate_u.cpp
//
// [EOF]
//
